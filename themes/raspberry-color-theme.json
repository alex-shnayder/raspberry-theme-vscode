{
  "name": "Raspberry",
  "type": "dark",
  "colors": {
    "editor.background": "#1c1a22",
    "editor.foreground": "#cfc0a1",
    "editor.lineHighlightBackground": "#25252c",
    "editor.selectionBackground": "#3A3645",
    "editor.selectionHighlightBackground": "#2E2B37",
    "editor.wordHighlightBackground": "#2E2B37",
    "editor.wordHighlightStrongBackground": "#3A3645",
    "editor.findMatchBackground": "#3D3B45",
    "editor.findMatchHighlightBackground": "#484552",
    "editor.findRangeHighlightBackground": "#484552",
    "editorLineNumber.foreground": "#565E6C",
    "editorLink.activeForeground": "#83afde",
    "editorWhitespace.foreground": "#2A2E33",
    "editorRuler.foreground": "#2A2E33",
    "editorGroupHeader.tabsBackground": "#25242d",
    "tab.inactiveBackground": "#2e2d38",
    "tab.inactiveForeground": "#d1cbbe",
    "tab.activeBackground": "#1c1a22",
    "tab.activeForeground": "#f2e8d3",
    "sideBar.background": "#19181f",
    "sideBar.foreground": "#d1cbbe",
    "sideBar.border": "#23272B",
    "sideBarSectionHeader.background": "#2e2d38",
    "sideBarSectionHeader.foreground": "#d1cfc9",
    "sideBarTitle.foreground": "#d1cfc9",
    "activityBar.background": "#17161d",
    "activityBarBadge.background": "#b33b4c",
    "statusBar.foreground": "#d1cbbe",
    "statusBar.background": "#17161d",
    "statusBar.noFolderBackground": "#365578",
    "statusBar.debuggingBackground": "#b33b4c",
    "progressBar.background": "#b33b4c",
    "panel.background": "#19181f",
    "panel.border": "#23272B",
    "panelTitle.activeBorder": "#e3a762",
    "panelTitle.activeForeground": "#e3a762",
    "panelTitle.inactiveForeground": "#cfc0a1",
    "debugToolBar.background": "#3D3B45",
    "list.activeSelectionBackground": "#302f3b",
    "list.inactiveSelectionBackground": "#2c2b36",
    "list.hoverBackground": "#26252e",
    "badge.background": "#b33b4c",
    "badge.foreground": "#d1cfc9",
    "dropdown.background": "#343340",
    "dropdown.foreground": "#d1cbbe",
    "input.background": "#343340",
    "input.foreground": "#d1cbbe"
  },
  "tokenColors": [
    {
      "name": "Misc",
      "scope": [
        "keyword.control.require"
      ],
      "settings": {
        "foreground": "#cfc0a1"
      }
    },
    {
      "name": "Punctuation",
      "scope": [
        "punctuation",
        "meta.brace",
      ],
      "settings": {
        "foreground": "#a4b0b3"
      }
    },
    {
      "name": "Punctuation In Type",
      "scope": [
        "punctuation.definition.typeparameters",
        "meta.type.annotation punctuation",
        "meta.type.annotation meta.brace",
        "meta.type.declaration punctuation",
        "meta.type.declaration meta.brace",
        "meta.interface punctuation",
        "meta.interface meta.brace",
        "meta.return.type punctuation",
        "keyword.operator.type.annotation"
      ],
      "settings": {
        "foreground": "#7C8894"
      }
    },
    {
      "name": "Comment",
      "scope": [
        "comment",
        "punctuation.definition.comment"
      ],
      "settings": {
        "foreground": "#727D87"
      }
    },
    {
      "name": "Variable",
      "scope": [
        "variable",
        "meta.parameters entity.name.function",
        "support.variable",
        "support.constant.json.js",
        "support.class.builtin",
        "string constant.other.placeholder",
        "meta.definition.variable entity.name.function"
      ],
      "settings": {
        "foreground": "#f24d69"
      }
    },
    {
      "name": "Variable In Type",
      "scope": [
        "meta.type.function variable",
        "meta.type.declaration variable",
        "meta.type.annotation variable",
        "meta.interface variable",
        "meta.return.type variable",
        "meta.var meta.type.annotation"
      ],
      "settings": {
        "foreground": "#bf5063"
      }
    },
    {
      "name": "Keyword, Storage",
      "scope": [
        "keyword",
        "storage"
      ],
      "settings": {
        "foreground": "#80abd9"
      }
    },
    {
      "name": "Type Keyword",
      "scope": [
        "keyword.control.as",
        "meta.type.parameters storage",
        "meta.type.annotation storage.modifier",
        "meta.type.declaration storage.modifier",
        "meta.interface storage.modifier",
        "meta.return.type keyword",
        "meta.type.parameters keyword.operator.expression.typeof"
      ],
      "settings": {
        "foreground": "#7491b1"
      }
    },
    {
      "name": "Operator",
      "scope": [
        "keyword.operator",
        "storage.type.function.arrow"
      ],
      "settings": {
        "foreground": "#83afde"
      }
    },
    {
      "name": "Type Operator",
      "scope": [
        "keyword.operator.type",
        "meta.return.type keyword.operator",
        "meta.type.declaration keyword.operator",
        "meta.type.annotation keyword.operator",
        "meta.interface keyword.operator",
        "meta.type.declaration storage.type.function.arrow",
        "meta.type.annotation storage.type.function.arrow",
        "meta.interface storage.type.function.arrow",
        "meta.return.type storage.type.function.arrow"
      ],
      "settings": {
        "foreground": "#7491b1"
      }
    },
    {
      "name": "Function/Class Definition",
      "scope": [
        "meta.interface entity.name.type.interface",
        "meta.definition entity.name",
        "meta.class entity.name.type.class",
        "meta.function.python entity.name.function",
        "source.clojure meta.definition entity"
      ],
      "settings": {
        "foreground": "#e3a762"
      }
    },
    {
      "name": "Type Declaration",
      "scope": [
        "meta.interface entity.name.type.interface",
        "meta.type.declaration entity.name.type.alias",
      ],
      "settings": {
        "foreground": "#de5f92"
      }
    },
    {
      "name": "Type Annotation",
      "scope": [
        "meta.type.annotation",
        "meta.type.declaration entity.name.type",
        "support.type.builtin",
        "meta.return.type",
        "meta.type.function.return",
        "meta.type.parameters",
        "support.type.primitive",
        "meta.indexer.mappedtype.declaration",
        "meta.interface entity.other.inherited-class"
      ],
      "settings": {
        "foreground": "#9d77a6"
      }
    },
    {
      "name": "Constant, Number, Color, Regexp",
      "scope": [
        "support.constant",
        "constant.numeric",
        "constant.language",
        "constant.character",
        "constant.other",
        "string.regexp",
        "punctuation.definition.entity.html"
      ],
      "settings": {
        "foreground": "#78cfa0"
      }
    },
    {
      "name": "String",
      "scope": [
        "string",
        "punctuation.definition.string"
      ],
      "settings": {
        "foreground": "#5abf73"
      }
    },
    {
      "name": "String in Type",
      "scope": [
        "meta.type.declaration string",
        "meta.type.annotation string",
        "meta.interface string",
        "meta.type.declaration punctuation.definition.string",
        "meta.type.annotation punctuation.definition.string",
        "meta.interface punctuation.definition.string"
      ],
      "settings": {
        "foreground": "#54a667"
      }
    },
    {
      "name": "Property, Attribute",
      "scope": [
        "meta.object-literal.key",
        "support.type.property-name",
        "punctuation.support.type.property-name",
        "entity.other.attribute-name",
        "variable.object.property",
        "constant.keyword"
      ],
      "settings": {
        "foreground": "#e3a762"
      }
    },
    {
      "name": "Property, Attribute in Type",
      "scope": [
        "meta.type.declaration variable.object.property",
        "meta.type.annotation variable.object.property",
        "meta.interface variable.object.property"
      ],
      "settings": {
        "foreground": "#bd8f5a"
      }
    },
    {
      "name": "Import, Export",
      "scope": [
        "support.type.object.module",
        "keyword.control.import",
        "keyword.control.export",
        "keyword.control.from",
        "meta.export.default keyword.control.export"
      ],
      "settings": {
        "foreground": "#74b9c2"
      }
    },
    // Clojure
    {
      "name": "Clojure Definitions",
      "scope": [
        "source.clojure meta.definition entity",
        "source.clojure meta.definition meta.symbol"
      ],
      "settings": {
        "foreground": "#f24d69"
      }
    },
    {
      "name": "Clojure Punctuation",
      "scope": [
        "source.clojure punctuation",
      ],
      "settings": {
        // "fontStyle": "italic"
      }
    },
    {
      "name": "Clojure Overrides",
      "scope": [
        "source.clojure meta.definition entity.name",
        "source.clojure meta.expression meta.definition.global meta.expression meta.vector meta.expression meta.symbol"
      ],
      "settings": {
        "foreground": "#cfc0a1"
      }
    },
    // Markup
    {
      "name": "Markup Heading",
      "scope": [
        "markup.heading"
      ],
      "settings": {
        "foreground": "#83afde"
      }
    },
    {
      "name": "Markup Bold",
      "scope": [
        "markup.bold"
      ],
      "settings": {
        "fontStyle": "bold"
      }
    },
    {
      "name": "Markup Italic",
      "scope": [
        "markup.italic"
      ],
      "settings": {
        "fontStyle": "italic"
      }
    },
    // XML-like
    {
      "name": "Tag Name",
      "scope": [
        "entity.name.tag",
        "entity.name.tag.js",
        "support.class.component.js"
      ],
      "settings": {
        "foreground": "#f24d69"
      }
    },
    {
      "name": "Tag Bracket",
      "scope": [
        "punctuation.definition.tag.xml",
        "punctuation.definition.tag.html",
        "punctuation.definition.tag.begin.html",
        "punctuation.definition.tag.end.html"
      ],
      "settings": {
        "foreground": "#a4b0b3"
      }
    },
    {
      "name": "Doctype",
      "scope": [
        "meta.tag.sgml.doctype",
        "keyword.other.doctype",
        "variable.language.documentroot.xml"
      ],
      "settings": {
        "foreground": "#B4473C"
      }
    },
    // Markdown
    {
      "name": "Markdown Heading",
      "scope": [
        "markup.heading.markdown",
        "punctuation.definition.heading.markdown"
      ],
      "settings": {
        "foreground": "#83afde"
      }
    },
    {
      "name": "Markdown List",
      "scope": [
        "beginning.punctuation.definition.list.markdown"
      ],
      "settings": {
        "foreground": "#e3a762"
      }
    },
    {
      "name": "Markdown Punctuation (e.g. ```)",
      "scope": [
        "punctuation.definition.markdown",
        "punctuation.definition.raw.markdown",
        "punctuation.definition.bold.markdown",
        "punctuation.definition.italic.markdown"
      ],
      "settings": {
        "foreground": "#a5c2cc"
      }
    },
    {
      "name": "Markdown Code Language",
      "scope": [
        "fenced_code.block.language"
      ],
      "settings": {
        "foreground": "#83afde"
      }
    },
    // Styles
    {
      "name": "Selector",
      "scope": [
        "source.css meta.selector",
        "source.css entity.name.tag",
      ],
      "settings": {
        "foreground": "#d1586c"
      }
    },
    {
      "name": "Class Selector",
      "scope": [
        "source.css entity.other.attribute-name.class",
        "source.css entity.other.attribute-name.class punctuation.definition",
      ],
      "settings": {
        "foreground": "#f24d69"
      }
    },
    {
      "name": "Id Selector",
      "scope": [
        "source.css entity.other.attribute-name.id",
        "source.css entity.other.attribute-name.id punctuation.definition",
      ],
      "settings": {
        "foreground": "#ff3d5d"
      }
    },
    {
      "name": "Pseudo Selector",
      "scope": [
        "source.css entity.other.attribute-name.pseudo-element",
        "source.css entity.other.attribute-name.pseudo-class",
      ],
      "settings": {
        "foreground": "#de5f92"
      }
    },
    {
      "name": "Selector Punctuation",
      "scope": [
        "source.css entity.other.attribute-name punctuation.definition",
        "source.css keyword.operator.combinator.css"
      ],
      "settings": {
        "foreground": "#a4b0b3"
      }
    },
    {
      "name": "At-rule",
      "scope": [
        "source.css keyword.control.at-rule",
        "source.css keyword.control punctuation.definition.keyword"
      ],
      "settings": {
        "foreground": "#83afde"
      }
    },
    {
      "name": "Function Call",
      "scope": [
        "source.css support.function"
      ],
      "settings": {
        "foreground": "#cfc0a1"
      }
    },
    {
      "name": "Unit",
      "scope": [
        "source.css keyword.other.unit"
      ],
      "settings": {
        "foreground": "#5abf73"
      }
    },
  ]
}
